/*
 * generated by Xtext 2.28.0
 */
package org.xtext.wizard.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.wizard.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.wizard.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getButtonAccess().getAlternatives(), "rule__Button__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getWizardAccess().getGroup(), "rule__Wizard__Group__0");
			builder.put(grammarAccess.getWizardAccess().getGroup_6(), "rule__Wizard__Group_6__0");
			builder.put(grammarAccess.getPageAccess().getGroup(), "rule__Page__Group__0");
			builder.put(grammarAccess.getPageAccess().getGroup_2(), "rule__Page__Group_2__0");
			builder.put(grammarAccess.getPageAccess().getGroup_2_3(), "rule__Page__Group_2_3__0");
			builder.put(grammarAccess.getPageAccess().getGroup_3(), "rule__Page__Group_3__0");
			builder.put(grammarAccess.getPageAccess().getGroup_7(), "rule__Page__Group_7__0");
			builder.put(grammarAccess.getTextFieldAccess().getGroup(), "rule__TextField__Group__0");
			builder.put(grammarAccess.getTextFieldAccess().getGroup_5(), "rule__TextField__Group_5__0");
			builder.put(grammarAccess.getCheckboxAccess().getGroup(), "rule__Checkbox__Group__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
			builder.put(grammarAccess.getButtonNavigateAccess().getGroup(), "rule__ButtonNavigate__Group__0");
			builder.put(grammarAccess.getButtonNavigateAccess().getGroup_3(), "rule__ButtonNavigate__Group_3__0");
			builder.put(grammarAccess.getButtonReturnAccess().getGroup(), "rule__ButtonReturn__Group__0");
			builder.put(grammarAccess.getButtonShowAccess().getGroup(), "rule__ButtonShow__Group__0");
			builder.put(grammarAccess.getButtonCloseAccess().getGroup(), "rule__ButtonClose__Group__0");
			builder.put(grammarAccess.getWizardAccess().getTitleAssignment_2(), "rule__Wizard__TitleAssignment_2");
			builder.put(grammarAccess.getWizardAccess().getPagesAssignment_5(), "rule__Wizard__PagesAssignment_5");
			builder.put(grammarAccess.getWizardAccess().getPagesAssignment_6_1(), "rule__Wizard__PagesAssignment_6_1");
			builder.put(grammarAccess.getPageAccess().getInitAssignment_0(), "rule__Page__InitAssignment_0");
			builder.put(grammarAccess.getPageAccess().getTextfieldsAssignment_2_2(), "rule__Page__TextfieldsAssignment_2_2");
			builder.put(grammarAccess.getPageAccess().getTextfieldsAssignment_2_3_1(), "rule__Page__TextfieldsAssignment_2_3_1");
			builder.put(grammarAccess.getPageAccess().getCheckboxAssignment_3_1(), "rule__Page__CheckboxAssignment_3_1");
			builder.put(grammarAccess.getPageAccess().getButtonsAssignment_6(), "rule__Page__ButtonsAssignment_6");
			builder.put(grammarAccess.getPageAccess().getButtonsAssignment_7_1(), "rule__Page__ButtonsAssignment_7_1");
			builder.put(grammarAccess.getTextFieldAccess().getMinLengthAssignment_2(), "rule__TextField__MinLengthAssignment_2");
			builder.put(grammarAccess.getTextFieldAccess().getMaxLengthAssignment_4(), "rule__TextField__MaxLengthAssignment_4");
			builder.put(grammarAccess.getTextFieldAccess().getInputAssignment_5_1(), "rule__TextField__InputAssignment_5_1");
			builder.put(grammarAccess.getTextFieldAccess().getLabelAssignment_7(), "rule__TextField__LabelAssignment_7");
			builder.put(grammarAccess.getCheckboxAccess().getSelectedAssignment_0(), "rule__Checkbox__SelectedAssignment_0");
			builder.put(grammarAccess.getCheckboxAccess().getLabelAssignment_3(), "rule__Checkbox__LabelAssignment_3");
			builder.put(grammarAccess.getLabelAccess().getTextAssignment_2(), "rule__Label__TextAssignment_2");
			builder.put(grammarAccess.getButtonNavigateAccess().getNextPageAssignment_2(), "rule__ButtonNavigate__NextPageAssignment_2");
			builder.put(grammarAccess.getButtonNavigateAccess().getNextPageAltAssignment_3_1(), "rule__ButtonNavigate__NextPageAltAssignment_3_1");
			builder.put(grammarAccess.getButtonNavigateAccess().getLabelAssignment_5(), "rule__ButtonNavigate__LabelAssignment_5");
			builder.put(grammarAccess.getButtonReturnAccess().getPreviousPageAssignment_2(), "rule__ButtonReturn__PreviousPageAssignment_2");
			builder.put(grammarAccess.getButtonReturnAccess().getLabelAssignment_4(), "rule__ButtonReturn__LabelAssignment_4");
			builder.put(grammarAccess.getButtonShowAccess().getMessageAssignment_2(), "rule__ButtonShow__MessageAssignment_2");
			builder.put(grammarAccess.getButtonShowAccess().getLabelAssignment_4(), "rule__ButtonShow__LabelAssignment_4");
			builder.put(grammarAccess.getButtonCloseAccess().getWizardAssignment_2(), "rule__ButtonClose__WizardAssignment_2");
			builder.put(grammarAccess.getButtonCloseAccess().getLabelAssignment_4(), "rule__ButtonClose__LabelAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
